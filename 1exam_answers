In future, write something half-way intelligent for partial credit!

High Score: 85
Median: 65-70

1) 
    Domain-Specific Services
    Common MW Services
    Distribution MW
    Infrastructure MW

2) Complimentary... you can have layers in each tier!

3) See Chap 2: 22-23 slide

    Logical vs. physcial

4) TCP: know somethings there and know if something gets dropped (less predictable latency and less efficient)
   UDP: 

5) Ch 1

6) Intro 13,15 slides

7)
    a)
        Well, you do the same distributed programming steps: names, use middleware, both handle failures, whatnot.  NOT the lwer-level "need messaging" etc cause that is not app prog but rather orB implementation.

    b)

        Anything that shows you have to handle a difference in teh quantity and variability in bandwidth, latency, much more heterogeneity, security, partial failures, firewalls

8) Ch 4 slides 43-46

9) Chap 5: 20-21
    
    d) something like status report, where getting it more than once is OK

10) ch 1: 22, misc
    Access, location, network, concurrency, replication, failure, mobility, performance, scaling

    Generally not a great idea, because you tend to have to make pesamistical assumptions to prevent anything
    bad from happening, but that is expensive. So could otherwise be more efficient.

11) a)
        m1,m2,m4  m1,m4,m2  m4,m1,m2
    b)
        m1,m2,m4
    c)
        m1,m2,m4   m1,m4,m2   m4,m1,m2

12) 
13)
14)

15) Chap 15 slide 14

    Consider 3 procs in a ring in the order, p1 p2 p3...

16)
    a)
        it can get ride of all "false causality" that the transport layer's "potential causality" pessimistallcaly reports as being causally related
